#!/usr/bin/env bash

set -ev

export THT="${THT:-/usr/share/openstack-tripleo-heat-templates}"
{% if (ansible_distribution | lower) != 'redhat' %}
{%   if True in (tripleo_developer_patches | map(attribute='install_in_venv') | list) %}
source /opt/tripleo-patches/bin/activate
{%   endif %}
{% endif %}
{# Create basic role list #}
{% set roles = [] %}
{# Create basic environment list #}
{% set environments_user = [] %}
{% set environments = [
    '$THT/environments/disable-telemetry.yaml'
   ]
%}
{% if tripleo_low_memory | bool %}
{%   set _ = environments.append('$THT/environments/low-memory-usage.yaml') %}
{% endif %}
{% if (rh_it_ca_stat is defined) and (rh_it_ca_stat.stat.exists | bool) %}
{%   set _ = environments.append('$THT/environments/ssl/inject-trust-anchor.yaml') %}
{% endif %}
{# Deployment #}
{% if inventory_hostname in groups['undercloud'] %}
{#   multi-node #}
source ~/stackrc
{%   set _ = environments.append(ansible_env.HOME ~ '/local_images.yaml') %}
{%   if (ansible_distribution | lower) == 'redhat' %}
{#
    NOTE(cloudnull): Remove image prepare, this is not required, though
                     it would be nice to expose this if enabled.
    openstack tripleo container image prepare -e local_images.yaml --output-env-file {{ ansible_env.HOME }}/containers-prepare-parameters.yaml
    {%     set _ = environments.append(ansible_env.HOME ~ '/containers-prepare-parameters.yaml') %}
#}
{%   else %}
{#
    NOTE(cloudnull): Removed local push, while it may be useful, I'm not sure it is needed.
                     The generated template file has also been removed.
    openstack tripleo container image prepare default --local-push-destination --output-env-file {{ ansible_env.HOME }}/containers-prepare-parameters.yaml
    {%     set _ = environments.append(ansible_env.HOME ~ '/containers-prepare-parameters.yaml') %}
#}
{%   endif %}
pushd $THT
  $THT/tools/process-templates.py --roles-data $THT/roles_data.yaml -o /tmp/templates/
popd
{%   set cli_args = ['--disable-validations', '--validation-errors-nonfatal'] %}
{%   if (tripleo_deploy_pre_provisioned is defined) and (tripleo_deploy_pre_provisioned | bool) %}
#   pre-provisioned nodes #
{%     include 'templates/template-preprovisioned.sh.j2' %}

{%     set _ = roles.append('$THT/roles_data.yaml') %}
{%     set _ = cli_args.append('--overcloud-ssh-user' ~ ansible_env.USER) %}
{%     set _ = cli_args.append('--overcloud-ssh-key' ~ ansible_env.HOME ~ '/.ssh/id_rsa') %}
{%   elif (tripleo_overcloud_novaless is defined) and (tripleo_overcloud_novaless | bool) %}
#   pre-provisioned with metalsmith (novaless) nodes #
{%     include 'templates/template-preprovisioned.sh.j2' %}

{%     include 'templates/template-build-images.sh.j2' %}

{%     include 'templates/template-introspect-nodes.sh.j2' %}

openstack --os-cloud undercloud overcloud node provision \
                         --stack {{ tripleo_stack_name | default('overcloud') }} \
                         --output {{ ansible_env.HOME ~ '/pre-provisioned-parameters.yaml' }} \
                         {{ ansible_env.HOME }}/overcloud-baremetal-config.yaml

{%     set _ = cli_args.append('--deployed-server') %}
{%     set _ = environments.append('/tmp/templates/environments/enable-swap-partition.yaml') %}
{%   else %}
#   ironic powered nodes #
{%     if tripleo_nfs_image_mount is undefined or (ansible_distribution | lower) == 'redhat' or (tripleo_build_images | default(false) | bool) %}
{%       include 'templates/template-build-images.sh.j2' %}
{%     endif %}

{%     include 'templates/template-introspect-nodes.sh.j2' %}

{%     set _ = roles.append('$THT/roles_data.yaml') %}
{%     set _ = environments.append('$THT/environments/enable-swap.yaml') %}
{%   endif %}
{%   set _ = environments.append('/tmp/templates/environments/podman.yaml') %}
{%   set _ = environments_user.append(ansible_env.HOME ~ '/parameters.yaml') %}
{%   set sorted_base_env_files = (environments | sort | list) %}
{%   set _ = sorted_base_env_files.extend(environments_user) %}
function deploy {
    openstack --os-cloud undercloud overcloud deploy \
            --stack {{ tripleo_stack_name | default('overcloud') }} \
            --templates $THT/ \
            -e {{ sorted_base_env_files | join(' -e ') }} \
            --log-file {{ ansible_env.HOME }}/deploy.log \
            --config-download-timeout 1024 \
            --timeout 1024 \
            {{ cli_args | join(' ') }} {{ ((roles | length) > 0) | ternary(('-r ' ~ (roles | join(' -r '))), '') }}
}
deploy || (openstack --os-cloud undercloud overcloud admin authorize --stack {{ tripleo_stack_name | default('overcloud') }} && deploy)
{% else %}
{#   Standalone #}
{%   set _ = environments.append('$THT/environments/standalone/standalone-tripleo.yaml') %}
{%   set _ = roles.append('$THT/roles/Standalone.yaml') %}
{% if hostvars[inventory_hostname]['tripleo_ceph_enabled'] | default(false) | bool %}
{%   set _ = environments.extend(tripleo_ceph_standalone_templates) %}
{% endif %}
{%   set sorted_base_env_files = (environments | sort | list) %}
{%   set _ = sorted_base_env_files.extend(environments_user) %}
sudo --preserve-env=PATH,VIRTUAL_ENV openstack tripleo deploy  \
                                               --templates $THT \
                                               --local-ip={{ tripleo_job_address }}/{{ tripleo_cidr | ipaddr('prefix') }} \
                                               -r {{ roles | join(' -r ') }} \
                                               -e {{ sorted_base_env_files | join(' -e ') }} \
                                               --log-file {{ ansible_env.HOME }}/deploy.log \
                                               --output-dir {{ ansible_env.HOME }} \
                                               --standalone
{% endif %}
