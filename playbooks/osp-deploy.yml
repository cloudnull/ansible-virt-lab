---
# Ansible virtualization tools for lab based deployments
# Copyright (C) 2019  Kevin Carter
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


- name: Run OSP deployment
  hosts: undercloud
  any_errors_fatal: true
  gather_facts: true
  vars_files:
    - vars/main.yml
  tasks:
    - name: Set instackenv file fact
      set_fact:
        instackenv_file: "{{ lookup('env','HOME') }}/vm-instackenv.yaml"
      when:
        - instackenv_file is undefined

    - name: Copy instackenv into place
      copy:
        src: "{{ instackenv_file }}"
        dest: "{{ ansible_env.HOME }}/vm-instackenv.yaml"

    - name: Read instackenv yaml
      slurp:
        src: "{{ ansible_env.HOME }}/vm-instackenv.yaml"
      register: instack_env

    - name: Check for rh it ca
      stat:
        path: "/etc/pki/ca-trust/source/anchors/2015-RH-IT-Root-CA.pem"
      register: rh_it_ca_stat

    - name: Read RH IT CA
      slurp:
        src: "/etc/pki/ca-trust/source/anchors/2015-RH-IT-Root-CA.pem"
      register: rh_it_ca
      when:
        - rh_it_ca_stat.stat.exists | bool

    - name: Set rh ca fact
      set_fact:
        rh_it_ca_fact: "{{ rh_it_ca['content'] | b64decode }}"
      when:
        - rh_it_ca_stat.stat.exists | bool

    - name: Set Nodes
      set_fact:
        target_nodes: "{{ (instack_env['content'] | b64decode | from_yaml)['nodes'] }}"

    - name: Set Node cound fact
      set_fact:
        target_node_count: "{{ target_nodes | length }}"

    - name: Create undercloud config
      template:
        src: templates/undercloud.conf
        dest: "{{ ansible_env.HOME }}/undercloud.conf"

    - name: Fetch params
      uri:
        url: "{{ redhat_puddle_local_images_url }}"
        return_content: yes
      register: compose_details
      when:
        - redhat_puddle_local_images_url is defined

    - name: Create params yaml
      template:
        src: templates/params.yaml
        dest: "{{ ansible_env.HOME }}/params.yaml"

    - name: Create local_images params
      template:
        src: templates/local_images.yaml
        dest: "{{ ansible_env.HOME }}/local_images.yaml"

    - name: Create images directory
      file:
        path: "{{ ansible_env.HOME }}/images"
        state: directory
      become: false

    - name: Install images packages
      package:
        name:
          - "rhosp-director-images"
          - "rhosp-director-images-ipa"
        state: present
      become: true

    - name: Run image unpack command(s)
      shell: |-
        for i in overcloud-full.tar ironic-python-agent.tar; do
          tar xf /usr/share/rhosp-director-images/$i
        done
      args:
        chdir: "{{ ansible_env.HOME }}/images"

    - name: Install build packages
      package:
        name:
          - "gcc"
        state: present
      become: true

    - name: Install rdopkg
      become: true
      pip:
        name: "{{ developer_py_venv_packages }}"
        virtualenv: "/opt/rdo"
        virtualenv_site_packages: yes
        virtualenv_python: "{{ ansible_python_interpreter | basename }}"

    - name: Create run osp deploy script
      template:
        src: run_osp_deploy.sh.j2
        dest: "{{ ansible_env.HOME }}/run-osp-deploy.sh"
        mode: '0755'

    - name: Run deployment command(s)
      when:
        - deploy_osp | default(true) | bool
      shell: "{{ ansible_env.HOME }}/run-osp-deploy.sh"
      become: false

    - name: Build notice
      when:
        - deploy_osp | default(true) | bool
      debug:
        msg: >-
          Stack creation has started. Connect to the system `{{ ansible_host }}`
          as `{{ ansible_user }}`. When ready, you can monitor the installation
          progress via the `undercloud` tmux session.
