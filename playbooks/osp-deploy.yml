---
# Ansible virtualization tools for lab based deployments
# Copyright (C) 2019  Kevin Carter
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


- name: Run OSP deployment
  hosts: undercloud
  any_errors_fatal: true
  gather_facts: true
  vars_files:
    - vars/main.yml
  tasks:
    - name: Set instackenv file fact
      set_fact:
        instackenv_file: "{{ lookup('env','HOME') }}/vm-instackenv.yaml"
      when:
        - instackenv_file is undefined

    - name: Copy instackenv into place
      copy:
        src: "{{ instackenv_file }}"
        dest: "{{ ansible_env.HOME }}/vm-instackenv.yaml"

    - name: Read instackenv yaml
      slurp:
        src: "{{ ansible_env.HOME }}/vm-instackenv.yaml"
      register: instack_env

    - name: Set Node cound fact
      set_fact:
        target_node_count: "{{ (instack_env['content'] | b64decode | from_yaml)['nodes'] | length }}"

    - name: Create undercloud config
      template:
        src: templates/undercloud.conf
        dest: "{{ ansible_env.HOME }}/undercloud.conf"

    - name: Fetch params
      uri:
        url: "{{ redhat_puddle_local_images_url }}"
        return_content: yes
      register: compose_details
      when:
        - redhat_puddle_local_images_url is defined

    - name: Create params yaml
      template:
        src: templates/params.yaml
        dest: "{{ ansible_env.HOME }}/params.yaml"

    - name: Create local_images params
      template:
        src: templates/local_images.yaml
        dest: "{{ ansible_env.HOME }}/local_images.yaml"

    - name: Create images directory
      file:
        path: "{{ ansible_env.HOME }}/images"
        state: directory
      become: false

    - name: Install images packages
      package:
        name:
          - "rhosp-director-images"
          - "rhosp-director-images-ipa"
        state: present
      become: true

    - name: Run setup command(s)
      shell: |-
        for i in overcloud-full.tar ironic-python-agent.tar; do
          tar xf /usr/share/rhosp-director-images/$i
        done
      args:
        chdir: "{{ ansible_env.HOME }}/images"

    - name: Install build packages
      package:
        name:
          - "gcc"
        state: present
      become: true

    - name: Install rdopkg
      become: true
      pip:
        name: "{{ developer_py_venv_packages }}"
        virtualenv: "/opt/rdo"
        virtualenv_site_packages: yes
        virtualenv_python: "{{ ansible_python_interpreter | basename }}"

    - name: Run deployment command(s)
      shell: "{{ item }}"
      environment:
        THT: "/usr/share/openstack-tripleo-heat-templates"
      become: false
      with_items:
        - tmux new-session -d -s undercloud -n undercloud || true
        - tmux new-window -n deploy -t 0 || true
        - tmux new-window -n glances -t 1 || true
        - tmux select-window -t 1
        - tmux send-keys "/opt/rdo/bin/glances --disable-autodiscover --diskio-iops --diskio-show-ramfs --enable-irq" C-m
        - tmux select-window -t 0
        - tmux send-keys "openstack undercloud install" C-m
        - tmux send-keys "source ~/stackrc" C-m
        - tmux send-keys "openstack subnet set ctlplane-subnet --dns-nameserver {{ redhat_dns_servers[0] }}" C-m
        - tmux send-keys "pushd ~/images" C-m
        - tmux send-keys "openstack overcloud image upload --update-existing" C-m
        - tmux send-keys "popd" C-m
        - tmux send-keys "openstack tripleo container image prepare -e local_images.yaml --output-env-file containers-prepare-parameters.yaml" C-m
        - tmux send-keys "openstack overcloud node import vm-instackenv.yaml" C-m
        - tmux send-keys "openstack overcloud node introspect --all-manageable --provide --concurrency {{ (ansible_processor_vcpus | int) * 2  }}" C-m
        - tmux send-keys "openstack overcloud deploy --templates $THT/
                          --timeout 100
                          -e $THT/environments/enable-swap.yaml
                          -e $THT/environments/disable-telemetry.yaml
                          -e $THT/environments/docker-ha.yaml
                          -e $THT/environments/podman.yaml
                          -e $THT/environments/services/neutron-ovn-ha.yaml
                          -e containers-prepare-parameters.yaml -e params.yaml" C-m

    - name: Build notice
      debug:
        msg: >-
          Stack creation has started. Connect to the system `{{ ansible_host }}`
          as `{{ ansible_user }}`. When ready, you can monitor the installation
          progress via the `undercloud` tmux session.
