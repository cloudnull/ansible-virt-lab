---
# Ansible virtualization tools for lab based deployments
# Copyright (C) 2019  Kevin Carter
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


- name: Install packages on the compute host
  hosts: libvirt_hosts
  any_errors_fatal: true
  gather_facts: true
  user: root
  vars_files:
    - vars/main.yml
  tasks:
    - name: Gather variables for each operating system
      include_vars: "{{ item }}"
      with_first_found:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      tags:
        - always

    - name: Run package installs on all libvirt hosts
      package:
        name: "{{ server_system_packages }}"
        state: "present"
        update_cache: "{{ ((ansible_os_family | lower) == 'debian') | ternary('yes', omit) }}"

    - name: Enable and start
      systemd:
        name: "{{ server_libvirt_service_name }}"
        state: started
        daemon_reload: true
        enabled: true

    - name: Remove the default virt network
      virt_net:
        name: "default"
        state: absent

    - name: Define virt network(s)
      virt_net:
        name: "provisioning"
        state: present
        xml: "{{ lookup('template', 'virt-' ~ item ~'-net.xml.j2') }}"
      loop:
        - external
        - provisioning

    - name: Set virt network(s) to active
      virt_net:
        name: "{{ item }}"
        state: active
      loop:
        - external
        - provisioning

    - name: Set virt network(s) to autostart
      virt_net:
        name: "{{ item }}"
        autostart: true
      loop:
        - external
        - provisioning

    - name: Install vbmc
      pip:
        name: virtualbmc
        virtualenv: /opt/vbmc
        virtualenv_site_packages: true

    - name: Create vbmcd service
      template:
        src: vbmcd.service
        dest: /etc/systemd/system/vbmcd.service

    - name: Enable and start vbmcd
      systemd:
        name: vbmcd.service
        state: started
        daemon_reload: true
        enabled: true
