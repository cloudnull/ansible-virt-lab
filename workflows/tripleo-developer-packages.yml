---
# Ansible virtualization tools for lab based deployments
# Copyright (C) 2019  Kevin Carter
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


- name: Run tripleo developer setup
  hosts: "undercloud"
  any_errors_fatal: true
  gather_facts: true
  become: true
  vars_files:
    - vars/main.yml
  pre_tasks:
    - name: Gather variables for each operating system
      include_vars: "{{ item }}"
      with_first_found:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      tags:
        - always
  tasks:
    # NOTE(cloudnull): Dirty hack because these packages are missing
    - name: Install mock and unit tests
      package:
        name: "{{ tripleo_external_developer_packages }}"
        state: present

    - name: Install rdopkg
      pip:
        name: "{{ developer_py_venv_packages }}"
        virtualenv: "/opt/tripleo/venv"
        virtualenv_site_packages: yes
        virtualenv_python: "{{ ((ansible_distribution | lower) != 'centos') | ternary('python3', omit) }}"

    - name: Install developer patches
      when:
        - (tripleo_developer_patches | length) > 0
        - (ansible_distribution | lower) != 'redhat'
      vars:
        ansible_python_interpreter: /opt/tripleo/venv/bin/python
      block:
        - name: Create delorian directories
          file:
            path: "/opt/tripleo/rpms"
            state: "directory"

        - name: Set some facts
          set_fact:
            build_dir: '/home/stack'

        - name: Set libselinux name for python3
          when: ansible_facts['python_version'] is version('3.0', 'gt', strict=False)
          set_fact:
            libselinux_python: python3-libselinux

        - name: Set libselinux name for python2
          when: ansible_facts['python_version'] is version('3.0', 'lt', strict=True)
          set_fact:
            libselinux_python: libselinux-python

        - name: Create mock group
          become: true
          group:
            name: mock
            state: present

        - name: Add user to mock group
          user:
            name: "{{ ansible_user }}"
            groups: mock
            append: true

        - name: Ensure DLRN data subdirectory is present
          file:
            path: "/opt/tripleo/DLRN/data"
            state: directory

        - name: Push projects config
          template:
            dest: "/opt/tripleo/DLRN/projects.ini"
            src: projects.ini.j2

        - name: Install and update pip in venv
          pip:
            name: pip
            state: latest
            virtualenv: "/opt/tripleo/venv"
            extra_args: '--upgrade'

        - name: Fetch rdoinfo
          git:
            repo: "https://github.com/redhat-openstack/rdoinfo"
            dest: "/opt/tripleo/rdoinfo"
            version: master

        - name: Cleanup repos with refspecs
          file:
            path: "/opt/tripleo/data/{{ item.url | basename }}"
            state: absent
          when:
            - item.refs is defined
          with_items: "{{ tripleo_developer_patches }}"

        - name: Clone patched repo(s)
          git:
            repo: "{{ item.url }}"
            dest: "/opt/tripleo/data/{{ item.url | basename }}"
            refspec: '{{ item.refs | default(omit) }}'
            version: "{{ item.version | default(((item.refs is defined) | ternary('FETCH_HEAD', omit))) }}"
          with_items: "{{ tripleo_developer_patches }}"

        - name: Force packages to rebuild
          file:
            path: "/opt/tripleo/{{ item.url | basename }}.created"
            state: absent
          with_items: "{{ tripleo_developer_patches }}"
          when:
            - developer_rebuild_rpms | bool

        - name: Download the centos gpg key
          get_url:
            url: http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-Official
            dest: /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-Official
          when:
            - (ansible_distribution | lower) != 'centos'

        - name: Install developer pip packages
          pip:
            name: "/opt/tripleo/{{ item.url | basename }}"
            extra_args: '--force --upgrade'
            virtualenv: "/opt/tripleo/venv"
            virtualenv_site_packages: no
            virtualenv_python: "{{ ((ansible_distribution | lower) != 'centos') | ternary('python3', omit) }}"
          when:
            - item.install_in_venv | default(false) | bool
          with_items: "{{ tripleo_developer_patches }}"

        - name: Create package build script
          template:
            src: rpm_build.sh.j2
            dest: "/opt/tripleo/build-packages.sh"
            mode: '0755'

        - name: Notice
          debug:
            msg: 'Package build script is ready at: /opt/tripleo/build-packages.sh'
