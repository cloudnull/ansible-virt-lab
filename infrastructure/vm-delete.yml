---
# Ansible virtualization tools for lab based deployments
# Copyright (C) 2019  Kevin Carter
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


#
# This playbook has three basic options:
#   * vm_flags - Options to pass into libvirt (virt-install).
#
# This setup tool requires two networks to be enabled within libvirt: ['provisioning', 'external'].
#

- name: Create virtual machines
  hosts: all_vms
  any_errors_fatal: true
  gather_facts: false
  user: root

  vars_files:
    - vars/main.yml

  tasks:
    - name: Check VM (delete)
      command: >-
        virsh dominfo {{ inventory_hostname }}
      failed_when: false
      changed_when: false
      register: vm_dominfo
      delegate_to: "{{ vm_virt_host }}"
      become: true

    - name: Set protected fact
      set_fact:
        vm_protected: "{{ (hostvars[inventory_hostname]['vm_protected'] is defined) and (hostvars[inventory_hostname]['vm_protected'] | bool) and (vm_dominfo.rc == 0) }}"
      run_once: true

    - name: Stop block
      when:
        - vm_dominfo.rc == 0
        - not (vm_protected | bool)
      become: true
      delegate_to: "{{ vm_virt_host }}"
      block:
        - name: Destroy running VM
          virt:
            name: "{{ inventory_hostname }}"
            command: destroy
          register: destroy
          until: destroy is failed
          retries: 3
          delay: 1
          failed_when: destroy is success
          ignore_errors: true

        - name: Undefine VM
          become: true
          virt:
            name: "{{ inventory_hostname }}"
            command: "undefine"
          register: undefine
          until: undefine is success
          retries: 2
          delay: 1
          ignore_errors: true

    - name: Clean up base image file
      file:
        path: "/var/lib/libvirt/images/{{ inventory_hostname }}"
        state: absent
      delegate_to: "{{ vm_virt_host }}"
      become: true
